package Chap10.Ex04;

class Animal2 {
	void run() {
		
	}
}

class Tigar extends Animal2 {  // 출력 : 호랑이는 네발로 달립니다.
	@Override
	void run () {
		System.out.println( " 호랑이는 네발로 달립니다.");
	}
}

class Eagle extends Animal2 {  //  출력 : 독수리는 하늘을 날아다닙니다.
	@Override
	void run () {
		System.out.println( "독수리는 하늘을 날아다닙니다.");
}
}
class Snake extends Animal2 {
	@Override
	void run () {
		System.out.println( " 뱀은 기어 다닙니다.");
}
}

public class MethodOverriding_2 {

	public static void main(String[] args) {
		
		System.out.println("=========== 1. ==========");
		// 1. 모든 객체는 Animal2 타입으로 업캐스팅해서 생성.
	
		Animal2 Aaa = new Animal2();
		Tigar a2 = new Tigar();
		Eagle b2 = new Eagle();
		Snake c2 = new Snake();
		
		Aaa.run();
		a2.run();
		b2.run();
		c2.run();
		
		
		System.out.println("========== 2. ==========");
		
		//2. Animal2 배열에 각 객체를 저장.
		
		Animal2 aaa = new Tigar();
		Animal2 bbb = new Eagle();
		Animal2 ccc = new Snake();
		
		aaa.run();
		bbb.run();
		ccc.run();
		
		
		
		
		
		System.out.println("=========== 3. ==========");
		//3. for 문으로 배열의 객체를 출력 . run() 를실행 
		
		Animal2[] ani = {aaa,bbb,ccc};
		
		for (int i2 = 0 ; i2 <ani.length ; i2++) {
			ani[i2].run();
		}
		
		
		System.out.println("========== 4. ===========");
		// 4 . Enhanced for 문을 사용해서 run() 메소드 출력

		
		
		for ( Animal2 k2 : ani ) {
			k2.run();
		}
		
		
		
	}
}

